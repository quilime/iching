const float PI = 3.141592653589793;
const float TWOPI = PI * 2.0;

float norm(float f){
    return (f + 1.0) * 0.5;
}

float wave(vec2 p, float seed,  float thickness, float time )
{   
    float dx = (p.x+mouse.x*0.1) - p.y * 0.1 + time * 0.01 - thickness * 0.25;
    float w = norm( sin( dx * TWOPI * seed * thickness + time  ) );
    return w;
}


void main(void)
{

    vec3 color = vec3(0.);
    vec2 p = - 1.0 + 2.0 * vUv;
        
    float wavetime = time * 0.2;
    float thickness = abs( norm( sin(wavetime * 1.2) ) ) + .001;
    
    float brightness = 2.0;
    brightness *=  wave(p, 4.0, thickness, wavetime );
    brightness *=  wave(p, 11.0, thickness * 0.5, wavetime );
    brightness *=  wave(p, 5.0, thickness * 0.33, wavetime );
    
    float maxy = 1.0 - pow( norm( sin(p.x * PI * 2.0 + wavetime ) ), .5 ) - pow( norm( sin(p.x * PI * 1.5 + wavetime*1.0 ) ), 0.5 );
    brightness *= p.y * maxy;

    gl_FragColor = vec4( brightness, brightness, brightness, 1.0 );
}





      varying vec2 vUv;
      uniform float time;
      void main() {
        vec2 p = - 1.0 + 2.0 * vUv;
        float a = time * 40.0;
        float d, e, f, g = 1.0 / 40.0 ,h ,i ,r ,q;
        e = 400.0 * ( p.x * 0.5 + 0.5 );
        f = 400.0 * ( p.y * 0.5 + 0.5 );
        i = 200.0 + sin( e * g + a / 150.0 ) * 20.0;
        d = 200.0 + cos( f * g / 2.0 ) * 18.0 + cos( e * g ) * 7.0;
        r = sqrt( pow( abs( i - e ), 2.0 ) + pow( abs( d - f ), 2.0 ) );
        q = f / r;
        e = ( r * cos( q ) ) - a / 2.0;
        f = ( r * sin( q ) ) - a / 2.0;
        d = sin( e * g ) * 176.0 + sin( e * g ) * 164.0 + r;
        h = ( ( f + d ) + a / 2.0 ) * g;
        i = cos( h + r * p.x / 1.3 ) * ( e + e + a ) + cos( q * g * 6.0 ) * ( r + h / 3.0 );
        h = sin( f * g ) * 144.0 - sin( e * g ) * 212.0 * p.x;
        h = ( h + ( f - e ) * q + sin( r - ( a + h ) / 7.0 ) * 10.0 + i / 4.0 ) * g;
        i += cos( h * 2.3 * sin( a / 350.0 - q ) ) * 184.0 * sin( q - ( r * 4.3 + a / 12.0 ) * g ) + tan( r * g + h ) * 184.0 * cos( r * g + h );
        i = mod( i / 5.6, 256.0 ) / 64.0;
        if ( i < 0.0 ) i += 4.0;
        if ( i >= 2.0 ) i = 4.0 - i;
        d = r / 350.0;
        d += sin( d * d * 8.0 ) * 0.52;
        f = ( sin( a * g ) + 1.0 ) / 2.0;
        gl_FragColor = vec4( vec3( f * i / 1.6, i / 2.0 + d / 13.0, i ) * d * p.x + vec3( i / 1.3 + d / 8.0, i / 2.0 + d / 18.0, i ) * d * ( 1.0 - p.x ), 1.0 );
      }